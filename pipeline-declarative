pipeline{
    agent any
        tools {
  maven 'maven3.8.5'
}
triggers {
  pollSCM '* * * * *'
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')
}

try{
sendSlackNotifications('STARTED')
    stages{
        stage('gitCheckOutCode'){
            steps(){
                git branch: 'development', credentialsId: 'a853e7f2-1117-44b2-a703-21d3f8dfe7d4', url: 'https://github.com/seenu4linux/maven-web-application.git'
            }
        }
        stage('Build'){
            steps(){
                sh "mvn clean package"
            }
        }
        stage('ExecuteSonarQubeReport'){
            steps(){
                sh "mvn sonar:sonar"
            }
        }
        stage('UploadArtifactsInToNexusServer'){
            steps(){
                sh "mvn deploy"
            }
        }
        
        stage('DeployAppInToTomcatServer'){
            steps(){
                sshagent(['68531d99-b799-4f8d-87ed-16048ff9ea91']){
    // some block
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.110.182.253:/opt/apache-tomcat-9.0.63/webapps"
        }
            }
        }
        
    
    }catch(e){
currentBuild.result = "FAILED"
    throw e
}
finally{
sendSlackNotifications(currentBuild.result)
}
}
def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}
